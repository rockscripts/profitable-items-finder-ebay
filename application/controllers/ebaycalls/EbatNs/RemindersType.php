<?php
// autogenerated file 29.12.2011 15:00
// $Id: $
// $Log: $
//
//
require_once 'EbatNs_ComplexType.php';

/**
 * Specifies the type of reminders for which you want information. 
 *
 * @link http://developer.ebay.com/DevZone/XML/docs/Reference/eBay/types/RemindersType.html
 *
 */
class RemindersType extends EbatNs_ComplexType
{
	/**
	 * @var int
	 */
	protected $PaymentToSendCount;
	/**
	 * @var int
	 */
	protected $FeedbackToReceiveCount;
	/**
	 * @var int
	 */
	protected $FeedbackToSendCount;
	/**
	 * @var int
	 */
	protected $OutbidCount;
	/**
	 * @var int
	 */
	protected $PaymentToReceiveCount;
	/**
	 * @var int
	 */
	protected $SecondChanceOfferCount;
	/**
	 * @var int
	 */
	protected $ShippingNeededCount;
	/**
	 * @var int
	 */
	protected $RelistingNeededCount;
	/**
	 * @var int
	 */
	protected $TotalNewLeadsCount;
	/**
	 * @var int
	 */
	protected $DocsForCCProcessingToSendCount;
	/**
	 * @var int
	 */
	protected $RTEToProcessCount;
	/**
	 * @var int
	 */
	protected $ItemReceiptToConfirmCount;
	/**
	 * @var int
	 */
	protected $RefundOnHoldCount;
	/**
	 * @var int
	 */
	protected $RefundCancelledCount;
	/**
	 * @var int
	 */
	protected $ShippingDetailsToBeProvidedCount;
	/**
	 * @var int
	 */
	protected $ItemReceiptConfirmationToReceiveCount;
	/**
	 * @var int
	 */
	protected $RefundInitiatedCount;
	/**
	 * @var int
	 */
	protected $PendingRTERequestCount;
	/**
	 * @var int
	 */
	protected $DeclinedRTERequestCount;

	/**
	 * @return int
	 */
	function getPaymentToSendCount()
	{
		return $this->PaymentToSendCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPaymentToSendCount($value)
	{
		$this->PaymentToSendCount = $value;
	}
	/**
	 * @return int
	 */
	function getFeedbackToReceiveCount()
	{
		return $this->FeedbackToReceiveCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setFeedbackToReceiveCount($value)
	{
		$this->FeedbackToReceiveCount = $value;
	}
	/**
	 * @return int
	 */
	function getFeedbackToSendCount()
	{
		return $this->FeedbackToSendCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setFeedbackToSendCount($value)
	{
		$this->FeedbackToSendCount = $value;
	}
	/**
	 * @return int
	 */
	function getOutbidCount()
	{
		return $this->OutbidCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setOutbidCount($value)
	{
		$this->OutbidCount = $value;
	}
	/**
	 * @return int
	 */
	function getPaymentToReceiveCount()
	{
		return $this->PaymentToReceiveCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPaymentToReceiveCount($value)
	{
		$this->PaymentToReceiveCount = $value;
	}
	/**
	 * @return int
	 */
	function getSecondChanceOfferCount()
	{
		return $this->SecondChanceOfferCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setSecondChanceOfferCount($value)
	{
		$this->SecondChanceOfferCount = $value;
	}
	/**
	 * @return int
	 */
	function getShippingNeededCount()
	{
		return $this->ShippingNeededCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setShippingNeededCount($value)
	{
		$this->ShippingNeededCount = $value;
	}
	/**
	 * @return int
	 */
	function getRelistingNeededCount()
	{
		return $this->RelistingNeededCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setRelistingNeededCount($value)
	{
		$this->RelistingNeededCount = $value;
	}
	/**
	 * @return int
	 */
	function getTotalNewLeadsCount()
	{
		return $this->TotalNewLeadsCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setTotalNewLeadsCount($value)
	{
		$this->TotalNewLeadsCount = $value;
	}
	/**
	 * @return int
	 */
	function getDocsForCCProcessingToSendCount()
	{
		return $this->DocsForCCProcessingToSendCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setDocsForCCProcessingToSendCount($value)
	{
		$this->DocsForCCProcessingToSendCount = $value;
	}
	/**
	 * @return int
	 */
	function getRTEToProcessCount()
	{
		return $this->RTEToProcessCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setRTEToProcessCount($value)
	{
		$this->RTEToProcessCount = $value;
	}
	/**
	 * @return int
	 */
	function getItemReceiptToConfirmCount()
	{
		return $this->ItemReceiptToConfirmCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setItemReceiptToConfirmCount($value)
	{
		$this->ItemReceiptToConfirmCount = $value;
	}
	/**
	 * @return int
	 */
	function getRefundOnHoldCount()
	{
		return $this->RefundOnHoldCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setRefundOnHoldCount($value)
	{
		$this->RefundOnHoldCount = $value;
	}
	/**
	 * @return int
	 */
	function getRefundCancelledCount()
	{
		return $this->RefundCancelledCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setRefundCancelledCount($value)
	{
		$this->RefundCancelledCount = $value;
	}
	/**
	 * @return int
	 */
	function getShippingDetailsToBeProvidedCount()
	{
		return $this->ShippingDetailsToBeProvidedCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setShippingDetailsToBeProvidedCount($value)
	{
		$this->ShippingDetailsToBeProvidedCount = $value;
	}
	/**
	 * @return int
	 */
	function getItemReceiptConfirmationToReceiveCount()
	{
		return $this->ItemReceiptConfirmationToReceiveCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setItemReceiptConfirmationToReceiveCount($value)
	{
		$this->ItemReceiptConfirmationToReceiveCount = $value;
	}
	/**
	 * @return int
	 */
	function getRefundInitiatedCount()
	{
		return $this->RefundInitiatedCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setRefundInitiatedCount($value)
	{
		$this->RefundInitiatedCount = $value;
	}
	/**
	 * @return int
	 */
	function getPendingRTERequestCount()
	{
		return $this->PendingRTERequestCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setPendingRTERequestCount($value)
	{
		$this->PendingRTERequestCount = $value;
	}
	/**
	 * @return int
	 */
	function getDeclinedRTERequestCount()
	{
		return $this->DeclinedRTERequestCount;
	}
	/**
	 * @return void
	 * @param int $value 
	 */
	function setDeclinedRTERequestCount($value)
	{
		$this->DeclinedRTERequestCount = $value;
	}
	/**
	 * @return 
	 */
	function __construct()
	{
		parent::__construct('RemindersType', 'urn:ebay:apis:eBLBaseComponents');
		if (!isset(self::$_elements[__CLASS__]))
				self::$_elements[__CLASS__] = array_merge(self::$_elements[get_parent_class()],
				array(
					'PaymentToSendCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'FeedbackToReceiveCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'FeedbackToSendCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'OutbidCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'PaymentToReceiveCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'SecondChanceOfferCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'ShippingNeededCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'RelistingNeededCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'TotalNewLeadsCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'DocsForCCProcessingToSendCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'RTEToProcessCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'ItemReceiptToConfirmCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'RefundOnHoldCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'RefundCancelledCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'ShippingDetailsToBeProvidedCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'ItemReceiptConfirmationToReceiveCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'RefundInitiatedCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'PendingRTERequestCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					),
					'DeclinedRTERequestCount' =>
					array(
						'required' => false,
						'type' => 'int',
						'nsURI' => 'http://www.w3.org/2001/XMLSchema',
						'array' => false,
						'cardinality' => '0..1'
					)
				));
	}
}
?>
